# Azure Deployment Plan for Zenith Student Marketplace

## **Goal**
Deploy the Zenith Student Marketplace Next.js ecommerce application to Azure App Service with MySQL database, custom domain integration, and production-ready configuration.

## **Project Information**
**AppName**: Zenith Student Marketplace
- **Technology Stack**: Next.js 15.2.4 with TypeScript, React 19, Prisma ORM
- **Application Type**: Professional ecommerce marketplace for student products and services
- **Database**: MySQL with Prisma ORM integration
- **Features**: User authentication, product management, shopping cart, video splash screen, responsive design
- **Current Status**: Development-ready with video splash screen and SVG branding integration
- **Hosting Recommendation**: Azure App Service for robust, scalable web application hosting

## **Azure Resources Architecture**
> **Install the mermaid extension in IDE to view the architecture.**

```mermaid
graph TB
    subgraph "Azure Resource Group"
        subgraph "Compute"
            AS[Azure App Service<br/>Next.js Application]
        end
        
        subgraph "Database"
            DB[Azure Database for MySQL<br/>Flexible Server]
        end
        
        subgraph "Storage & Security"
            KV[Azure Key Vault<br/>Connection Strings]
            ST[Azure Storage Account<br/>Static Assets & Images]
        end
        
        subgraph "Monitoring"
            AI[Application Insights<br/>Performance Monitoring]
            LA[Log Analytics Workspace<br/>Centralized Logging]
        end
        
        subgraph "Networking"
            CDN[Azure CDN<br/>Global Content Delivery]
            DNS[Azure DNS Zone<br/>Custom Domain Management]
        end
    end
    
    subgraph "External"
        GD[GoDaddy Domain<br/>DNS Configuration]
        USER[Users<br/>Web Traffic]
    end
    
    USER --> CDN
    CDN --> AS
    AS --> DB
    AS --> KV
    AS --> ST
    AS --> AI
    AI --> LA
    GD --> DNS
    DNS --> AS
```

**Data Flow:**
- Users access the application through Azure CDN for optimal performance
- App Service hosts the Next.js application and handles all business logic
- MySQL Flexible Server stores all ecommerce data (users, products, orders)
- Key Vault securely stores database connection strings and API keys
- Storage Account serves static assets, product images, and video content
- Application Insights monitors performance and user behavior

## **Recommended Azure Resources**

### **Primary Application**
- **Application**: Zenith Student Marketplace
  - **Hosting Service Type**: Azure App Service (Linux)
  - **SKU**: Premium P1V3 (1 Core, 4GB RAM, Auto-scaling capable)
  - **Configuration**:
    - **Runtime**: Node.js 18 LTS
    - **Framework**: Next.js (production build)
    - **Environment Variables**: 
      - `DATABASE_URL` (from Key Vault)
      - `NEXTAUTH_SECRET` (from Key Vault)
      - `NEXTAUTH_URL`
      - `NODE_ENV=production`

### **Database Dependencies**
- **Azure Database for MySQL Flexible Server**
  - **SKU**: General Purpose B2s (2 vCores, 4GB RAM)
  - **Service Type**: Managed MySQL 8.0
  - **Connection Type**: Connection string via Key Vault
  - **Features**: Automated backups, high availability, SSL encryption
  - **Environment Variables**: `DATABASE_URL`

### **Supporting Services**
- **Azure Key Vault**
  - **Purpose**: Secure storage for database connection strings and API keys
  - **Access**: Managed Identity integration with App Service
  
- **Azure Storage Account**
  - **Type**: General Purpose V2 (Standard LRS)
  - **Purpose**: Static assets, product images, video files
  - **Features**: CDN integration, blob storage
  
- **Application Insights**
  - **Purpose**: Performance monitoring, error tracking, user analytics
  - **Integration**: Automatic with App Service
  
- **Log Analytics Workspace**
  - **Purpose**: Centralized logging for all Azure resources
  - **Integration**: Connected to App Service and Database
  
- **Azure CDN**
  - **Profile**: Standard Microsoft CDN
  - **Purpose**: Global content delivery, static asset optimization
  
- **Azure DNS Zone**
  - **Purpose**: Custom domain management for GoDaddy domain
  - **Features**: SSL certificate automation

### **Security Configuration**
- **App Service Managed Identity**: Enabled for secure Key Vault access
- **SSL/TLS**: Automatic HTTPS with Azure-managed certificates
- **Database Security**: SSL-only connections, firewall rules
- **Key Vault Access Policies**: Least privilege access for App Service
- **CORS Configuration**: Properly configured for production domain

## **Execution Steps**
> **Below are the steps for deployment:**

### **1. Provision Azure Infrastructure**
1. Generate Bicep/ARM templates for all required Azure resources
2. Validate templates and check resource availability in selected region
3. Deploy infrastructure using Azure CLI with what-if validation
4. Configure networking and security settings

### **2. Database Setup**
1. Create MySQL Flexible Server with production configuration
2. Configure firewall rules and SSL settings
3. Run database schema migration using Prisma
4. Set up automated backups and monitoring

### **3. Application Deployment**
1. Build Next.js application for production
2. Configure environment variables in Key Vault
3. Deploy application to App Service using CI/CD
4. Configure custom domain and SSL certificate

### **4. Domain Configuration**
1. Create Azure DNS Zone for custom domain
2. Configure GoDaddy DNS to point to Azure
3. Set up SSL certificate automation
4. Configure CDN for static asset delivery

### **5. Monitoring & Security**
1. Configure Application Insights monitoring
2. Set up log analytics and alerts
3. Test security configurations
4. Validate SSL and performance metrics

### **6. Validation & Testing**
1. Verify application functionality on production domain
2. Test database connectivity and operations
3. Validate video splash screen and branding
4. Perform load testing and security validation

## **Cost Estimates (Monthly)**
- **App Service P1V3**: ~$55-75
- **MySQL Flexible Server B2s**: ~$25-35  
- **Storage Account**: ~$5-15
- **Application Insights**: ~$10-25
- **CDN**: ~$10-30
- **Key Vault**: ~$3-5
- **Total Estimated Cost**: ~$110-185/month

## **Next Steps**
1. **Azure Account Setup**: Ensure you have an Azure subscription
2. **Resource Group**: Create dedicated resource group for the project
3. **Region Selection**: Choose optimal Azure region (recommend East US or West Europe)
4. **Domain Preparation**: Prepare GoDaddy domain for DNS configuration
5. **Environment Secrets**: Prepare production environment variables

This plan provides enterprise-grade hosting suitable for a professional ecommerce marketplace with scalability, security, and performance optimization built-in.